#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЭтаНовая = ЭтоНоваяЗапись();
	ИнициироватьПодсказки();

	Если ЭтаНовая Тогда
		Если Параметры.Свойство("УчетнаяЗапись") Тогда
			Запись.УчетнаяЗапись = Параметры.УчетнаяЗапись;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования.Номенклатура) Тогда
			Запись.Статус        = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ПустаяСсылка();
			Запись.МаркерСтатуса = 0;
			Модифицированность   = Истина;
		КонецЕсли;
		
		Элементы.Статус.Видимость = Ложь;
		Элементы.ИдентификаторПубликации.Видимость = Ложь;
		Элементы.ГруппаЕслиСоздание.Видимость = Истина;
		Элементы.Номенклатура.ТолькоПросмотр = Ложь;
		Элементы.Характеристика.ТолькоПросмотр = Ложь;
		Элементы.Упаковка.ТолькоПросмотр = Ложь;
		
	Иначе
		Элементы.Статус.Видимость = Истина;
		Элементы.ИдентификаторПубликации.Видимость = Истина;
		Элементы.ГруппаЕслиСоздание.Видимость = Ложь;
		Элементы.Номенклатура.ТолькоПросмотр = Истина;
		Элементы.Характеристика.ТолькоПросмотр = Истина;
		Элементы.Упаковка.ТолькоПросмотр = Истина;
	КонецЕсли;

	Элементы.Статус.ЦветТекста = ПолучитьЦветТекстаПоМаркеру();
	ИнициализироватьСтраницы();
	ИнициализироватьХарактеристикиПоВидуНоменклатуры();
	ОбновитьДопИнфо();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	СтруктураЗаписи = Новый Структура("УчетнаяЗапись, Номенклатура, Характеристика, Упаковка, Статус");
	ЗаполнитьЗначенияСвойств(СтруктураЗаписи, Запись);
	Если ЭтоНоваяЗапись() И ЗаписьСуществует(СтруктураЗаписи) Тогда
		ОчиститьСообщения();
		Отказ = Истина;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Товар уже существует в списке публикации.'"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("Запись_СтатусыПубликацииТоваровЯндексМаркет", 
		Запись.УчетнаяЗапись, 
		Запись);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияЯНеЗнаюНажатие(Элемент)

	Элементы.ПодсказкаЯНеЗнаюSKU.Видимость = НЕ Элементы.ПодсказкаЯНеЗнаюSKU.Видимость;
	Если Элементы.ПодсказкаЯНеЗнаюSKU.Видимость Тогда
		Элементы.ПодсказкаЯЗнаюSKU.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЯЗнаюSKUНажатие(Элемент)

	Элементы.ПодсказкаЯЗнаюSKU.Видимость = НЕ Элементы.ПодсказкаЯЗнаюSKU.Видимость;
	Если Элементы.ПодсказкаЯЗнаюSKU.Видимость Тогда
		Элементы.ПодсказкаЯНеЗнаюSKU.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПерейтиПоСсылкеНажатие(Элемент)

	Если ЗначениеЗаполнено(Запись.ГиперссылкаНаРекомендованныеТовар) Тогда
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СокрЛП(Запись.ГиперссылкаНаРекомендованныеТовар));
	Иначе
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Заполните поле ""Гиперссылка на пример товара""'"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)

	ОбновитьПредставлениеТовара();
	ОбновитьОтображениеДанных();
	ИнициализироватьХарактеристикиПоВидуНоменклатуры();

КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаПриИзменении(Элемент)

	ОбновитьПредставлениеТовара();
	ОбновитьОтображениеДанных();

КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)

	ОбновитьПредставлениеТовара();
	ОбновитьОтображениеДанных();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьНаМодерацию(Команда)

	ОбработатьРекомендацию(Команда.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьРекомендацию(Команда)

	ОбработатьРекомендацию(Команда.Имя);

КонецПроцедуры

&НаКлиенте
Процедура УтвердитьРекомендацию(Команда)

	ОбработатьРекомендацию(Команда.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ПолучитьРекомендацию(Команда)
	

	ОбработатьРекомендацию(Команда.Имя);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьЦветТекстаПоМаркеру()
	
	Если Запись.МаркерСтатуса = 0 Тогда
		
		Цвет = ЦветаСтиля.ЦветОсобогоТекста;	
		
	ИначеЕсли Запись.МаркерСтатуса = 1 Тогда
		
		Цвет = ЦветаСтиля.ЦветАктивности;
		
	ИначеЕсли Запись.МаркерСтатуса = 2 Тогда
		
		Цвет = ЦветаСтиля.ЦветПустойГиперссылки;
		
	ИначеЕсли Запись.МаркерСтатуса = 3 Тогда 
		
		Цвет = ЦветаСтиля.ЦветАкцента;
		
	КонецЕсли;
	
	Возврат Цвет;
			
КонецФункции

&НаСервере
Процедура ИнициализироватьСтраницы()
	
	Элементы.СтраницаДанныеСвязи.ТолькоПросмотр = Ложь;
	Элементы.СтраницаДанныеТовара.ТолькоПросмотр = Ложь;
	Элементы.СообщениеОНедоступности.Видимость = Ложь;
	Элементы.СтраницаОписаниеОшибки.Видимость = Ложь;
	
	Если Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НаМодерации
		ИЛИ  Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.МодерацияПройдена
		ИЛИ  Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация Тогда
			 
		Элементы.СтраницаДанныеСвязи.ТолькоПросмотр = Истина;
		Элементы.СтраницаДанныеТовара.ТолькоПросмотр = Истина;
		Элементы.СообщениеОНедоступности.Видимость = Истина;
		Элементы.ПолучитьРекомендацию.Видимость = Ложь;
		Элементы.ОтправитьНаМодерацию.Видимость = Ложь;
		Элементы.УтвердитьРекомендацию.Видимость = Ложь;
		Элементы.ОтклонитьРекомендацию.Видимость = Ложь;
	
	ИначеЕсли Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ПолученаРекомендация Тогда
		
		Элементы.ПолучитьРекомендацию.Видимость = Ложь;
		Элементы.ОтправитьНаМодерацию.Видимость = Ложь;
		Элементы.УтвердитьРекомендацию.Видимость = Истина;
		Элементы.ОтклонитьРекомендацию.Видимость = Истина;
	Иначе
		
		Элементы.ПолучитьРекомендацию.Видимость = Истина;
		Элементы.ОтправитьНаМодерацию.Видимость = Истина;
		Элементы.УтвердитьРекомендацию.Видимость = Ложь;
		Элементы.ОтклонитьРекомендацию.Видимость = Ложь;

	КонецЕсли;

	Если Запись.МаркерСтатуса = 0 И НЕ Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ПустаяСсылка() Тогда //красный
		
	     Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОписаниеОшибки;
		 Элементы.СтраницаОписаниеОшибки.Видимость = Истина;
		
	ИначеЕсли Запись.МаркерСтатуса = 1 Тогда //желтый
		
	     Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаДанныеСвязи;
		 		
	ИначеЕсли Запись.МаркерСтатуса = 2 Тогда //серый
		
	     Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаДанныеТовара;
		
	ИначеЕсли Запись.МаркерСтатуса = 3  ИЛИ Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.ПустаяСсылка() Тогда //зеленый
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаДанныеТовара;
		
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
Процедура ИнициироватьПодсказки()
	
	Элементы.ПодсказкаЯЗнаюSKU.Заголовок = НСтр("ru = 'Если Вы уже знаете SKU товара на Маркете, заполните информацию на закладке ""Данные связи"" и отправьте товар на модерацию (кнопка ""Отправить на модерацию"").'");
	Элементы.ПодсказкаЯНеЗнаюSKU.Заголовок = НСтр("ru = 'Если Вы не знаете SKU товара на Маркете, получите информацию о рекомендованных связях - проверьте информацию о товаре на закладке ""Данные товара"", при необходимости дозаполните недостающую информацию и нажмите кнопку ""Получить рекомендацию"". Все поля на закладке ""Данные товара"" необязательны, но рекомендованы к заполнению - подробное описание свойств товара увеличит вероятность подбора правильной рекомендации. Дождитесь результатного статуса, после смены статуса переходите к проверке и утверждению рекомендованной связи.'");
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьХарактеристикиПоВидуНоменклатуры()
	
	ИспользуетсяЦенообразование25 = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25();
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	ИспользоватьХарактеристикиНоменклатурыДляЦенообразования = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатурыДляЦенообразования");
	
	Запрос = Новый Запрос(); 
	Запрос.Параметры.Вставить("ИспользуетсяЦенообразование25", ИспользуетсяЦенообразование25);  
	Запрос.Параметры.Вставить("ИспользоватьХарактеристикиНоменклатуры", ИспользоватьХарактеристикиНоменклатуры);
	Запрос.Параметры.Вставить("ИспользоватьХарактеристикиНоменклатурыДляЦенообразования", ИспользоватьХарактеристикиНоменклатурыДляЦенообразования);

	Запрос.Параметры.Вставить("Номенклатура",Запись.Номенклатура);

	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВЫБОР 
		|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоХарактеристике = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать) 
		|			 	И &ИспользоватьХарактеристикиНоменклатуры 
		|				И ((&ИспользуетсяЦенообразование25 И &ИспользоватьХарактеристикиНоменклатурыДляЦенообразования) 
		|			 		ИЛИ НЕ &ИспользуетсяЦенообразование25)
		|			 ТОГДА ЛОЖЬ 
		|      	ИНАЧЕ &ИспользоватьХарактеристикиНоменклатуры 
		|	КОНЕЦ КАК ИспользоватьХарактеристикиНоменклатуры
		|ИЗ 
		|	Справочник.Номенклатура КАК Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
		|ГДЕ Номенклатура.Ссылка = &Номенклатура";
 
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Элементы.Характеристика.Доступность = Результат.ИспользоватьХарактеристикиНоменклатуры;		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЭтоНоваяЗапись()

	Возврат НЕ ЗначениеЗаполнено(Параметры.Ключ.Номенклатура);

КонецФункции

&НаКлиенте
Процедура ОбработатьРекомендацию(ИмяКоманды)

	Отказ = Ложь;

	Если НЕ ЗначениеЗаполнено(Запись.Номенклатура) Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполните поле Номенклатура'"),,,, Отказ);
	КонецЕсли;

	СтруктураЗаписи = Новый Структура("УчетнаяЗапись, Номенклатура, Характеристика, Упаковка, Статус");
	ЗаполнитьЗначенияСвойств(СтруктураЗаписи, Запись);
	Если ЭтоНоваяЗапись() И ЗаписьСуществует(СтруктураЗаписи) Тогда
		ОчиститьСообщения();
		Отказ = Истина;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Товар уже существует в списке публикации.'"));
	КонецЕсли;

	Если НЕ Отказ Тогда
		Если ИмяКоманды = "ОтправитьНаМодерацию" Тогда
			ОтправитьНаМодерациюНаСервере();
		ИначеЕсли ИмяКоманды = "ОтклонитьРекомендацию" Тогда
			ОтклонитьРекомендациюНаСервере();
		ИначеЕсли ИмяКоманды = "УтвердитьРекомендацию" Тогда
			УтвердитьРекомендациюНаСервере();
		ИначеЕсли ИмяКоманды = "ПолучитьРекомендацию" Тогда
			ПолучитьРекомендациюНаСервере();
		КонецЕсли;

		Оповестить("Запись_СтатусыПубликацииТоваровЯндексМаркет", 
			Запись.УчетнаяЗапись, 
			Запись);
			
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОтправитьНаМодерациюНаСервере()

	Если ЗначениеЗаполнено(Запись.ИдентификаторТовараПлощадки) Тогда
		Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;
	Иначе
		Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.СозданиеНового;
	КонецЕсли;

	Записать();
	
КонецПроцедуры

&НаСервере
Процедура ОтклонитьРекомендациюНаСервере()
	
	Запись.Статус         = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НевернаяРекомендация;
	Запись.ОписаниеОшибки =
		"Если товар определен неправильно:
		|Проверьте, что товар относится к одной из категорий, представленных на Маркете.
		|Убедитесь, что предоставили наиболее полные и точные данные о товаре.
		|Если не указана какая-либо информация, уточните входные данные запроса (например, добавьте цвет или размер в характеристики товара или добавьте описание модели, скорректировав данные в поле ""Представление"" на закладке ""Данные о товаре"", укажите базовую цену товара, если она не заполнена).
		|После заполнения данных отправьте повторно публикацию на получение рекомендации (кнопка ""Получить рекомендацию"").
		|Попробуйте найти товар в поиске по разделу «Покупки» на Маркете. Если товар найдется, SKU на Яндексе можно взять из URL его страницы. Например, если URL страницы товара — https://pokupki.market.yandex.ru/product/7715752, то его SKU на Яндексе — 7715752.Если советы не помогли - отправьте информацию о товаре без SKU на Яндексе (кнопка ""Отправить на модерацию"") - сотрудники Маркета могут подобрать или создать карточки для ваших товаров в личном кабинете, если товар еще не продается на Маркете.";
	ЭтотОбъект.Записать();

КонецПроцедуры

&НаСервере
Процедура УтвердитьРекомендациюНаСервере()

	Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;
	Записать();

КонецПроцедуры

&НаСервере
Процедура ПолучитьРекомендациюНаСервере()

	Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.Новый;
	Записать();

КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеТовара()

	Характеристика = "";
	Упаковка       = "";
	
	Если ЗначениеЗаполнено(Запись.Номенклатура) Тогда
		Если НЕ ЗначениеЗаполнено(Запись.Упаковка) Тогда
			Запись.Упаковка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Номенклатура, "ЕдиницаИзмерения");
		КонецЕсли;

		Номенклатура        = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запись.Номенклатура, "Наименование");
		Характеристика      = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запись.Характеристика, "Наименование");
		Упаковка            = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запись.Упаковка, "Наименование");
		ПредставлениеТовара = Номенклатура.Наименование;
		Если ЗначениеЗаполнено(Характеристика.Наименование) Тогда
			ПредставлениеТовара = ПредставлениеТовара + ", " + Характеристика.Наименование;
		КонецЕсли;
		Если ЗначениеЗаполнено(Упаковка.Наименование) Тогда
			ПредставлениеТовара = ПредставлениеТовара + ", " + Упаковка.Наименование;
		КонецЕсли;
		
		Запись.ПредставлениеТовара = ПредставлениеТовара;

		Запись.ТоварнаяКатегория   = ИнтеграцияСЯндексМаркетСервер.КатегорияТовара(Запись.Номенклатура,Запись.УчетнаяЗапись);
		
		БазовыйПрайсЛист = ИнтеграцияСЯндексМаркетСервер.ДанныеУчетнойЗаписиЯндексМаркет(Запись.УчетнаяЗапись, Ложь).ЦенаПродажи; 
		Если БазовыйПрайсЛист <> Справочники.ВидыЦен.ПустаяСсылка() Тогда

			Запрос = Новый Запрос();
			Запрос.Текст =
				"ВЫБРАТЬ
				|	ЦеныНоменклатуры.Цена КАК Цена
				|ИЗ
				|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
				|			&ТекущаяДата,
				|			ВидЦены = &БазовыйПрайсЛист
				|				И Номенклатура = &Номенклатура
				|				И Характеристика = &Характеристика) КАК ЦеныНоменклатуры";
			Запрос.Параметры.Вставить("ТекущаяДата",ТекущаяДатаСеанса());
			Запрос.Параметры.Вставить("БазовыйПрайсЛист",БазовыйПрайсЛист);
			Запрос.Параметры.Вставить("Номенклатура", Запись.Номенклатура);
			Запрос.Параметры.Вставить("Характеристика", Запись.Характеристика);

			Результат = Запрос.Выполнить().Выбрать();
			Пока Результат.Следующий() Цикл
				Запись.ЦенаПродажи = Результат.Цена;
			КонецЦикла;
			ОбновитьДопИнфо();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьДопИнфо()

	Если Запись.ТоварнаяКатегория <> "" Тогда
		ШаблонСообщения = НСтр("ru = 'Категория: %1
		|'");
		ТоварнаяКатегория = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Запись.ТоварнаяКатегория);
	Иначе	
		ТоварнаяКатегория = НСтр("ru = 'Категория: не указана
		|'");
	КонецЕсли;

	Если Запись.ЦенаПродажи <> "" Тогда
		ШаблонСообщения = НСтр("ru = 'Цена продажи: %1
		|'");
		БазоваяЦена = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Запись.ЦенаПродажи);
	Иначе	
		БазоваяЦена = НСтр("ru = 'Цена продажи: не указана
		|'");
	КонецЕсли;

	Если Запись.Номенклатура.Марка <> Справочники.Марки.ПустаяСсылка() Тогда
		ШаблонСообщения = НСтр("ru = 'Бренд (марка): %1
		|'");
		Бренд = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Запись.Номенклатура.Марка.Наименование);
	Иначе
		Бренд = НСтр("ru = 'Бренд (марка): не указан
		|'");
	КонецЕсли;

	Если Запись.Номенклатура.Артикул <> "" Тогда
		ШаблонСообщения = НСтр("ru = 'Артикул: %1
		|'");
		Артикул = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Запись.Номенклатура.Артикул);
	Иначе	
		Артикул = НСтр("ru = 'Артикул: не указан
		|'");
	КонецЕсли;

	Если Запись.Номенклатура.Производитель <> Справочники.Производители.ПустаяСсылка() Тогда 
		ШаблонСообщения = НСтр("ru = 'Производитель: %1
		|'");
		Производитель = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Запись.Номенклатура.Производитель.Наименование);
	Иначе
		Производитель  = НСтр("ru = 'Производитель: не указан (обязателен при отправке на модерацию)
		|'");
	КонецЕсли;

	Если Запись.Номенклатура.СтранаПроисхождения <> Справочники.СтраныМира.ПустаяСсылка() Тогда
		ШаблонСообщения = НСтр("ru = 'Страна происхождения: %1
		|'");
		Страна = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Запись.Номенклатура.СтранаПроисхождения.Наименование);
	Иначе	
		Страна = НСтр("ru = 'Страна происхождения: не указана (обязательна при отправке на модерацию)
		|'");
	КонецЕсли;

	СрокГодности  = НСтр("ru = 'Срок годности: не указан
		|'");

	ЕстьШтрихКоды = ПолучитьШтрихКоды().Количество()>0;

	Если  ЕстьШтрихКоды Тогда
		ШтрихКоды = НСтр("ru = 'Для товара указаны штрих-коды
		|'");
	Иначе
		ШтрихКоды = НСтр("ru = 'Для товара не указаны штрих-коды (обязательны при отправке на модерацию)
		|'");
	КонецЕсли;

	Весогабариты = ИнтеграцияСЯндексМаркетСервер.ПолучитьВесогабариты(Запись.Упаковка, Запись.Номенклатура, Истина);

	ВесогабаритыЗаголовок = НСтр("ru = 'Весогабариты:
		|'");

	Если Весогабариты.length <>"" Тогда
		Если Весогабариты.package = 1 Тогда
			ШаблонСообщения = НСтр("ru = '	Длина (глубина) упаковки товара: %1 см
			|'");
		Иначе
			ШаблонСообщения = НСтр("ru = '	Длина: %1 см
			|'");
		КонецЕсли;
		ВесогабаритыДлина = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Весогабариты.length);
	Иначе
		Если Весогабариты.package = 1 Тогда
			ВесогабаритыДлина = НСтр("ru = '	Для товара не указана длина (глубина) в параметрах упаковки (обязательный параметр при отправке на модерацию)
			|'");
		Иначе
			ВесогабаритыДлина = НСтр("ru = '	Для товара не указана длина (обязательный параметр при отправке на модерацию)
			|'");
		КонецЕсли;
	КонецЕсли;

	Если Весогабариты.width <>"" Тогда
		Если Весогабариты.package = 1 Тогда
			ШаблонСообщения = НСтр("ru = '	Ширина упаковки товара: %1 см
			|'");
		Иначе
			ШаблонСообщения = НСтр("ru = '	Ширина: %1 см
			|'");
		КонецЕсли;
		ВесогабаритыШирина = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Весогабариты.width);
	Иначе
		Если Весогабариты.package = 1 Тогда
			ВесогабаритыШирина = НСтр("ru = '	Для товара не указана ширина в параметрах упаковки (обязательный параметр при отправке на модерацию)
			|'");
		Иначе
			ВесогабаритыШирина = НСтр("ru = '	Для товара не указана ширина (обязательный параметр при отправке на модерацию)
			|'");
		КонецЕсли;
	КонецЕсли;

	Если Весогабариты.height <>"" Тогда
		Если Весогабариты.package = 1 Тогда
			ШаблонСообщения = НСтр("ru = '	Высота упаковки товара: %1 см
			|'");
		Иначе
			ШаблонСообщения = НСтр("ru = '	Высота: %1 см
			|'");
		КонецЕсли;

		ВесогабаритыВысота = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Весогабариты.height);
	Иначе
		Если Весогабариты.package = 1 Тогда
			ВесогабаритыВысота = НСтр("ru = '	Для товара не указана высота в параметрах упаковки (обязательный параметр при отправке на модерацию)
			|'");
		Иначе 
			ВесогабаритыВысота = НСтр("ru = '	Для товара не указана высота (обязательный параметр при отправке на модерацию)
			|'");
		КонецЕсли;
	КонецЕсли;

	Если Весогабариты.weight <>"" Тогда
		Если Весогабариты.package = 1 Тогда
			ШаблонСообщения = НСтр("ru = '	Вес упаковки товара: %1 кг
			|'");
		Иначе
			ШаблонСообщения = НСтр("ru = '	Вес: %1 кг
			|'");
		КонецЕсли;

		ВесогабаритыВес = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Весогабариты.weight);
	Иначе
		Если Весогабариты.package = 1 Тогда
			ВесогабаритыВес = НСтр("ru = '	Для товара не указан вес в параметрах упаковки (обязательный параметр при отправке на модерацию)
			|'");
		Иначе
			ВесогабаритыВес = НСтр("ru = '	Для товара не указан вес (обязательный параметр при отправке на модерацию)
			|'");
		КонецЕсли;

	КонецЕсли;

	ДопИнфо = ТоварнаяКатегория + БазоваяЦена + Бренд + Артикул + Производитель
		+ Страна + ШтрихКоды + СрокГодности + ВесогабаритыЗаголовок+ ВесогабаритыДлина
		+ ВесогабаритыШирина + ВесогабаритыВысота + ВесогабаритыВес;

КонецПроцедуры

&НаСервере
Функция ПолучитьШтрихКоды()

	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Номенклатура",Запись.Номенклатура);
	Запрос.Параметры.Вставить("Характеристика",Запись.Характеристика);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
		|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
		|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
		|	И ШтрихкодыНоменклатуры.Характеристика = &Характеристика";

	Результат = Запрос.Выполнить().Выгрузить();

	ШтрихКоды = Новый Массив;

	Если Результат.Количество()>0 Тогда
		ШтрихКоды = Результат.ВыгрузитьКолонку("Штрихкод");
	КонецЕсли;

	Возврат ШтрихКоды;

КонецФункции

&НаСервереБезКонтекста
Функция ЗаписьСуществует(СтруктураЗаписи)

	ЗаписьСуществует = Ложь;

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтатусыПубликацииТоваровЯндексМаркет.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
		|ГДЕ
		|	СтатусыПубликацииТоваровЯндексМаркет.УчетнаяЗапись = &УчетнаяЗапись
		|	И СтатусыПубликацииТоваровЯндексМаркет.Номенклатура = &Номенклатура
		|	И СтатусыПубликацииТоваровЯндексМаркет.Характеристика = &Характеристика
		|	И СтатусыПубликацииТоваровЯндексМаркет.Упаковка = &Упаковка";

	Запрос.Параметры.Вставить("УчетнаяЗапись",  СтруктураЗаписи.УчетнаяЗапись);
	Запрос.Параметры.Вставить("Номенклатура",   СтруктураЗаписи.Номенклатура);
	Запрос.Параметры.Вставить("Характеристика", СтруктураЗаписи.Характеристика);
	Запрос.Параметры.Вставить("Упаковка",       СтруктураЗаписи.Упаковка);

	ВыборкаДанных = Запрос.Выполнить().Выбрать();

	Если ВыборкаДанных.Следующий() Тогда
		ЗаписьСуществует = Истина;
	КонецЕсли;

	Возврат ЗаписьСуществует;

КонецФункции

#КонецОбласти
