#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "НомерЧека, СсылкаНаЧек, ЧекСамозанятого");
	
	ПредыдущееЗначениеСсылкиНаЧек = СсылкаНаЧек;
	
	ВывестиКартинку(АдресКартинки, СсылкаНаЧек);
	
	Если ПустаяСтрока(АдресКартинки)
		И ЗначениеЗаполнено(ЧекСамозанятого) Тогда
		АдресКартинки = ПоместитьВоВременноеХранилище(ЧекСамозанятого);
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СсылкаНаЧекПриИзменении(Элемент)
	
	Если СсылкаНаЧек = ПредыдущееЗначениеСсылкиНаЧек Тогда
		Возврат;
	КонецЕсли;
	
	ПредыдущееЗначениеСсылкиНаЧек = СсылкаНаЧек;
	СсылкаНаЧекПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(АдресКартинки) Тогда
		ЗагрузитьФайл();
	Иначе
		ФайловаяСистемаКлиент.ОткрытьФайл(АдресКартинки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЧекНажатие(Элемент)
	
	СсылкаНаЧек = "";
	НомерЧека = "";
	АдресКартинки = "";
	ПредыдущееЗначениеСсылкиНаЧек = "";
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЧекНажатие(Элемент)
	
	ЗагрузитьФайл();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПерейтиПоСсылке(Команда)
	
	Если ЗначениеЗаполнено(СсылкаНаЧек) Тогда
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаНаЧек);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		
		Структура = Новый Структура;
		Структура.Вставить("СсылкаНаЧек", СсылкаНаЧек);
		Структура.Вставить("НомерЧека", НомерЧека);
		Структура.Вставить("ЧекСамозанятого", ПолучитьИзВременногоХранилища(АдресКартинки));
		
		Закрыть(Структура);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавлениеЧекаСамозанятогоЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АдресКартинки = Результат.Адрес;

	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

// Выводит информацию о ходе выполнения загрузки.
// 
// Параметры:
//  ПомещаемыйФайл - СсылкаНаФайл - сведения о загружаемом файле.
//  Помещено - Число - процент выполнения.
//  ОтказОтПомещенияФайла - Булево - признак отмены выполнения.
//  ДополнительныеПараметры - Неопределено - дополнительные параметры.
// 
&НаКлиенте
Процедура ОтобразитьСостояниеЗагрузки(ПомещаемыйФайл, Помещено, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт

	ТекстВыполнения = СтрШаблон(НСтр("ru = 'Загружается файл: %1'"), ПомещаемыйФайл.Имя);
	Состояние(ТекстВыполнения, Помещено);

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФайлПередЗагрузкой(ПомещаемыйФайл, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт

	ДанныеФайла = Новый ДвоичныеДанные(ПомещаемыйФайл.Файл.ПолноеИмя);
	
	Картинка = Новый Картинка(ДанныеФайла);
	
	Если Картинка.Формат() = Неопределено
		Или Картинка.Формат() = ФорматКартинки.НеизвестныйФормат Тогда
		
		ТекстПредупреждения = НСтр("ru = 'Файл не является картинкой'");
		ОтказОтПомещенияФайла = Истина;
		ПоказатьПредупреждение(, ТекстПредупреждения);
	
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВывестиКартинку(АдресКартинки, СсылкаНаЧек)
	
	Если Не ЗначениеЗаполнено(СсылкаНаЧек) Тогда
		Возврат;
	КонецЕсли;
	
	Адрес = СсылкаНаЧек;
	
	ПараметрыПолучения = ПолучениеФайловИзИнтернетаКлиентСервер.ПараметрыПолученияФайла();
	ПараметрыПолучения.Таймаут = 1260;
	
	Результат = ПолучениеФайловИзИнтернета.СкачатьФайлВоВременноеХранилище(Адрес, ПараметрыПолучения);
	
	Если Результат.Статус Тогда
		АдресКартинки = Результат.Путь;
	Иначе
		ТекстОшибки = НСтр("ru = 'Не удалось получить чек самозанятого.
			|Описание: %1
			|URL: %2'");
		Если Результат.Свойство("КодСостояния") Тогда
			ТекстОшибки = ТекстОшибки + Символы.ПС + НСтр("ru = 'Код ошибки: %3'");
			ТекстОшибки = СтрШаблон(ТекстОшибки, Результат.СообщениеОбОшибке, Адрес, Результат.КодСостояния);
		Иначе
			ТекстОшибки = СтрШаблон(ТекстОшибки, Результат.СообщениеОбОшибке, Адрес);
		КонецЕсли;
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СсылкаНаЧекПриИзмененииСервер()

	Если СтрНайти(СсылкаНаЧек, ДенежныеСредстваПовтИспРФ.АдресСервисаФНС()) = 0 Тогда
		// Это не ссылка на чек, поэтому ничего не делаем
		Возврат;
	КонецЕсли;
	
	ПолучитьДанныеПоСсылкеНаЧек();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Элементы.ЗагрузитьЧек.Видимость = Не ЗначениеЗаполнено(Форма.АдресКартинки);
	Элементы.ОчиститьЧек.Видимость = ЗначениеЗаполнено(Форма.АдресКартинки);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеПоСсылкеНаЧек()
	
	НомерЧека = ДенежныеСредстваСерверЛокализация.НомерЧекаИзСсылки(СсылкаНаЧек);
	
	Если ЗначениеЗаполнено(СсылкаНаЧек) Тогда
		ВывестиКартинку(АдресКартинки, СсылкаНаЧек);
	Иначе
		ТекстСообщения = НСтр("ru='Не удалось скачать чек с сайта ФНС. 
			|Проверьте ссылку или попробуйте получить чек позднее'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "СсылкаНаЧек");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайл()

	ОбработчикЗавершенияЗагрузки = Новый ОписаниеОповещения("ДобавлениеЧекаСамозанятогоЗавершение", ЭтотОбъект);
	ОбработчикСостоянияЗагрузки = Новый ОписаниеОповещения("ОтобразитьСостояниеЗагрузки", ЭтотОбъект);
	ОбработчикПроверкиФайла = Новый ОписаниеОповещения("ПроверитьФайлПередЗагрузкой", ЭтотОбъект);
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.Заголовок = НСтр("ru = 'Выбор файла чека.'");
	ПараметрыДиалога.МножественныйВыбор = Ложь;
	
	НачатьПомещениеФайлаНаСервер(ОбработчикЗавершенияЗагрузки,
								ОбработчикСостоянияЗагрузки,
								ОбработчикПроверкиФайла, ,
								ПараметрыДиалога,
								УникальныйИдентификатор);

КонецПроцедуры

#КонецОбласти