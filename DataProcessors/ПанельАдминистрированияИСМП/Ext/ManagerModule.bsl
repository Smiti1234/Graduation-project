#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ОбновлениеИнформационнойБазы

Процедура ВключитьПроверкуРозничнымМетодомДляОпределенныхТоварныхГрупп() Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		ВедетсяУчетПродукцииТребующейОбязательнойОнлайнПроверки = РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП.ВедетсяУчетПродукцииТребующейОбязательнойОнлайнПроверки();
		
		Если ВедетсяУчетПродукцииТребующейОбязательнойОнлайнПроверки Тогда
		
			Если Не Константы.ЗапрашиватьДанныеСервисаИСМП.Получить() Тогда
				
				МетаданныеОбъекта  = Метаданные.Константы.ЗапрашиватьДанныеСервисаИСМП;
				ПолноеИмяОбъекта   = МетаданныеОбъекта.ПолноеИмя();
				
				Блокировка = Новый БлокировкаДанных;
			
				ЭлементБлокировки       = Блокировка.Добавить(ПолноеИмяОбъекта);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				
				ЭлементБлокировки       = Блокировка.Добавить(ПолноеИмяОбъекта);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				
				Блокировка.Заблокировать();
				
				Константы.ЗапрашиватьДанныеСервисаИСМП.Установить(Истина);
				
			КонецЕсли;
			
			Блокировка = Новый БлокировкаДанных;
			
			МетаданныеОбъекта  = Метаданные.Константы.НастройкиСканированияКодовМаркировкиИСМП;
			ПолноеИмяОбъекта   = МетаданныеОбъекта.ПолноеИмя();
			
			ЭлементБлокировки       = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ТекущиеНастройкиСканирования = ИнтеграцияИСМПВызовСервера.НастройкиСканированияКодовМаркировки();
			
			Если Не ТекущиеНастройкиСканирования.ПараметрыКонтроляВладельцев.Включено Тогда
			
				ОграниченияНастроек                = НастройкаПараметровСканированияСлужебныйКлиентСервер.НоваяГруппаПараметровНастройки(Истина);
				МассивТГОбязательнойОнлайнПроверки = ИнтеграцияИСМПКлиентСерверПовтИсп.ВидыПродукцийОбязательнойОнлайнПроверкиПередРозничнойПродажей();
				УчитываемыеТГ                      = ИнтеграцияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции();
				
				ОграниченияНастроек.ВариантОтображения = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				
				Для Каждого УчитываемаяТГ Из УчитываемыеТГ Цикл
					
					СоответствиеИсключений = Новый Соответствие();
					ОграниченияНастроек.Исключения.Вставить(УчитываемаяТГ, СоответствиеИсключений);
					
				КонецЦикла;
				
				ОграниченияНастроек.Включено = Истина;
				ТекущиеНастройкиСканирования.ПараметрыКонтроляВладельцев = ОграниченияНастроек;
			
				Если Не ТекущиеНастройкиСканирования.ПараметрыКонтроляСтатусов.Включено Тогда
				
					ТекущиеНастройкиСканирования.ПараметрыКонтроляСтатусов = ОграниченияНастроек;
				
				Иначе
					
					Для Каждого ТГОбязательнойПроверки Из МассивТГОбязательнойОнлайнПроверки Цикл
					
						ИсключенияКонтроляСтатусовПоТГ = ТекущиеНастройкиСканирования.ПараметрыКонтроляСтатусов.Исключения.Получить(ТГОбязательнойПроверки);
						
						Если ИсключенияКонтроляСтатусовПоТГ <> Неопределено Тогда
							
							Для Каждого ЗначениеОперации Из ИсключенияКонтроляСтатусовПоТГ Цикл
								
								Если ЗначениеОперации.Ключ = Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа И ЗначениеОперации.Значение Тогда
									ИсключенияКонтроляСтатусовПоТГ.Удалить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа);
								КонецЕсли;
								
							КонецЦикла;
							
							Если ИсключенияКонтроляСтатусовПоТГ.Количество() Тогда
								ТекущиеНастройкиСканирования.ПараметрыКонтроляСтатусов.Исключения.Вставить(ТГОбязательнойПроверки, ИсключенияКонтроляСтатусовПоТГ);
							Иначе
								ТекущиеНастройкиСканирования.ПараметрыКонтроляСтатусов.Исключения.Удалить(ТГОбязательнойПроверки);
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			Иначе
				
				МассивТГОбязательнойОнлайнПроверки = ИнтеграцияИСМПКлиентСерверПовтИсп.ВидыПродукцийОбязательнойОнлайнПроверкиПередРозничнойПродажей();
				
				Для Каждого ТГОбязательнойПроверки Из МассивТГОбязательнойОнлайнПроверки Цикл
					
					НастройкиИзменены                = Ложь;
					ИсключенияКонтроляВладельцевПоТГ = ТекущиеНастройкиСканирования.ПараметрыКонтроляВладельцев.Исключения.Получить(ТГОбязательнойПроверки);
					
					Если ИсключенияКонтроляВладельцевПоТГ <> Неопределено Тогда
						
						Для Каждого ЗначениеОперации Из ИсключенияКонтроляВладельцевПоТГ Цикл
							
							Если ЗначениеОперации.Ключ = Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа И ЗначениеОперации.Значение Тогда
								ИсключенияКонтроляВладельцевПоТГ.Удалить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа);
								НастройкиИзменены = Истина;
							КонецЕсли;
							
						КонецЦикла;
						
						Если ИсключенияКонтроляВладельцевПоТГ.Количество() Тогда
							ТекущиеНастройкиСканирования.ПараметрыКонтроляВладельцев.Исключения.Вставить(ТГОбязательнойПроверки, ИсключенияКонтроляВладельцевПоТГ);
						ИначеЕсли НастройкиИзменены Тогда
							ТекущиеНастройкиСканирования.ПараметрыКонтроляВладельцев.Исключения.Удалить(ТГОбязательнойПроверки);
						КонецЕсли;
						
					КонецЕсли;

					НастройкиИзменены                = Ложь;
					ИсключенияКонтроляСтатусовПоТГ = ТекущиеНастройкиСканирования.ПараметрыКонтроляСтатусов.Исключения.Получить(ТГОбязательнойПроверки);
					
					Если ИсключенияКонтроляСтатусовПоТГ <> Неопределено Тогда
						
						Для Каждого ЗначениеОперации Из ИсключенияКонтроляСтатусовПоТГ Цикл
							
							Если ЗначениеОперации.Ключ = Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа И ЗначениеОперации.Значение Тогда
								ИсключенияКонтроляСтатусовПоТГ.Удалить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа);
								НастройкиИзменены = Истина;
							КонецЕсли;
							
						КонецЦикла;
						
						Если ИсключенияКонтроляСтатусовПоТГ.Количество() Тогда
							ТекущиеНастройкиСканирования.ПараметрыКонтроляСтатусов.Исключения.Вставить(ТГОбязательнойПроверки, ИсключенияКонтроляСтатусовПоТГ);
						ИначеЕсли НастройкиИзменены Тогда
							ТекущиеНастройкиСканирования.ПараметрыКонтроляСтатусов.Исключения.Удалить(ТГОбязательнойПроверки);
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Константы.НастройкиСканированияКодовМаркировкиИСМП.Установить(Новый ХранилищеЗначения(ТекущиеНастройкиСканирования));
		
			ОбновитьПовторноИспользуемыеЗначения();
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	
	Исключение
		
		ОбработкаЗавершена = Ложь;
		
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru = 'Не удалось обновить исключения по товарным группам, требующим обязательного онлайн-контроля при продаже в розницу, по причине: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
		                         УровеньЖурналаРегистрации.Предупреждение,
		                         МетаданныеОбъекта,,
		                         ТекстСообщения);
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеДляОбновленияИсключенийКонтроляСтатусовИВладельцев(Параметры) Экспорт
	
	Возврат;

КонецПроцедуры

Процедура ОбработатьДанныеДляОбновленияИсключенийКонтроляСтатусовИВладельцев(Параметры) Экспорт
	
	ОбработкаЗавершена = Истина;
	
	ВключитьПроверкуРозничнымМетодомДляОпределенныхТоварныхГрупп();
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюРаздельныйКонтрольСтатусовВладельцевКМ(Параметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюРаздельныйКонтрольСтатусовВладельцевКМ(Параметры) Экспорт
	
	МетаданныеОбъекта  = Метаданные.Константы.ЗапрашиватьДанныеСервисаИСМП;
	ПолноеИмяОбъекта   = МетаданныеОбъекта.ПолноеИмя();
	ОбработкаЗавершена = Истина;
	
	ПредыдущееЗначениеКонтроляСтатусов        = Константы.ЗапрашиватьДанныеСервисаИСМП.Получить();
	ПредыдущееЗначениеКонтроляСтатусовРозница = Константы.УдалитьКонтролироватьСтатусыКодовМаркировкиВРозницеИСМП.Получить();
	
	Если ПредыдущееЗначениеКонтроляСтатусов
		Или ПредыдущееЗначениеКонтроляСтатусовРозница Тогда
		
		ПараметрыКонтроля = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ПараметрыКонтроля();
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки       = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			ЭлементБлокировки       = Блокировка.Добавить(Метаданные.Константы.НастройкиСканированияКодовМаркировкиИСМП.ПолноеИмя());
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			НастройкиСканирования = ИнтеграцияИСМПВызовСервера.НастройкиСканированияКодовМаркировки();
		
			ГруппаНастроекКонтрольСтатусов = НастройкаПараметровСканированияСлужебныйКлиентСервер.ЗначениеГруппыНастроек(
				НастройкиСканирования,
				ПараметрыКонтроля.ПараметрыКонтроляСтатусов);
			ГруппаНастроекКонтрольСтатусов.Включено   = Истина;
			ГруппаНастроекКонтрольСтатусов.Исключения = Новый Соответствие();
			
			ГруппаНастроекКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСервер.ЗначениеГруппыНастроек(
				НастройкиСканирования,
				ПараметрыКонтроля.ПараметрыКонтроляВладельцев);
			ГруппаНастроекКонтрольВладельцев.Включено   = Истина;
			ГруппаНастроекКонтрольВладельцев.Исключения = Новый Соответствие();
			
			УчитываемыеВидыТабак = ИнтеграцияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции(Ложь, Истина);
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка
			|ИЗ
			|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Товары КАК ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары
			|ГДЕ
			|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка.Проведен
			|	И ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.GTIN <> """"
			|	И ПОДСТРОКА(ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.GTIN, 1, 3) <> ""029""
			|	И ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка.ВидПродукции В (&УчитываемыеВидыТабак)";
			
			Запрос.УстановитьПараметр("УчитываемыеВидыТабак", УчитываемыеВидыТабак);
			
			ДобавитьИсключениеКонтрольВладельцевТабакАТП = (Не Запрос.Выполнить().Пустой());
			УчитываемыеВидыМаркируемойПродукции          = ИнтеграцияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции();
			ВсеОперации                                  = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ДопустимыеВидыОпераций().ВыгрузитьЗначения();
			ВариантОтображенияКонтрольСтатусов           = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоВидамПродукции();
			ВариантОтображенияКонтрольВладельцев         = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоВидамПродукции();
			
			ОперацииИсключений        = Новый Массив();
			ОперацииРозничнойТорговли = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ОперацииРозничнойТорговли();
			
			Если ПредыдущееЗначениеКонтроляСтатусов
				И Не ПредыдущееЗначениеКонтроляСтатусовРозница Тогда
				
				ОперацииИсключений                   = ОперацииРозничнойТорговли;
				ВариантОтображенияКонтрольСтатусов   = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				ВариантОтображенияКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				
			ИначеЕсли ПредыдущееЗначениеКонтроляСтатусовРозница
				И Не ПредыдущееЗначениеКонтроляСтатусов Тогда
				
				ОперацииИсключений                   = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ВсеОперации, ОперацииРозничнойТорговли);
				ВариантОтображенияКонтрольСтатусов   = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				ВариантОтображенияКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				
			КонецЕсли;
			
			Для Каждого ВидПродукции Из УчитываемыеВидыМаркируемойПродукции Цикл
				
				Для Каждого Операция Из ОперацииИсключений Цикл
					
					НастройкаПараметровСканированияСлужебныйКлиентСервер.ДобавитьВИсключение(
						ГруппаНастроекКонтрольСтатусов,
						ВидПродукции,
						Операция);
					
					НастройкаПараметровСканированияСлужебныйКлиентСервер.ДобавитьВИсключение(
						ГруппаНастроекКонтрольВладельцев,
						ВидПродукции,
						Операция);
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если ДобавитьИсключениеКонтрольВладельцевТабакАТП Тогда
				
				Для Каждого ВидПродукции Из УчитываемыеВидыТабак Цикл
					
					ГруппаНастроекКонтрольВладельцев.Исключения.Вставить(ВидПродукции, Новый Соответствие());
					
				КонецЦикла;
				
				ВариантОтображенияКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоВидамПродукции();
				
			КонецЕсли;
			
			Если УчитываемыеВидыМаркируемойПродукции.Количество() = 1 Тогда
				Если ВариантОтображенияКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоВидамПродукции() Тогда
					ВариантОтображенияКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				КонецЕсли;
				Если ВариантОтображенияКонтрольСтатусов = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоВидамПродукции() Тогда
					ВариантОтображенияКонтрольСтатусов = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				КонецЕсли;
			КонецЕсли;
			
			ГруппаНастроекКонтрольВладельцев.ВариантОтображения = ВариантОтображенияКонтрольВладельцев;
			ГруппаНастроекКонтрольСтатусов.ВариантОтображения   = ВариантОтображенияКонтрольСтатусов;
				
			ЗначениеКонстантыНастроек = Новый ХранилищеЗначения(НастройкиСканирования);
			Константы.НастройкиСканированияКодовМаркировкиИСМП.Установить(ЗначениеКонстантыНастроек);
			Константы.ЗапрашиватьДанныеСервисаИСМП.Установить(Истина);
			
			ОбновитьПовторноИспользуемыеЗначения();
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОбработкаЗавершена = Ложь;
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать переход на раздельный контроль статусов и кодов макрировки по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         МетаданныеОбъекта,,
			                         ТекстСообщения);
			
		КонецПопытки;
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли